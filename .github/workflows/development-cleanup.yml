name: Development.yml CI
on:
  pull_request:
    types: [closed]

jobs:
  pre_destroy:
    runs-on: ubuntu-latest
    outputs:
      bucket_name_suffix: ${{ steps.bucket_name_suffix.outputs.suffix }}
    steps:
      - name: "Create bucket_name_suffix Output"
        id: bucket_name_suffix
        run: |
          suffix=$(echo ${{ github.ref_name }} | sed 's/\//-/')
          echo "::set-output name=suffix::$suffix"

  dev-destroy-s3-dev:
    runs-on: ubuntu-latest
    needs: [pre_destroy]
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format - Destroy Existing Bucket
        id: fmt-destroy
        run: terraform -chdir=terraform/development/destroy fmt -check

      - name: Terraform Init - Destroy Existing Bucket
        id: init-destroy
        run: terraform -chdir=terraform/development/destroy init -backend-config="region=${{ secrets.AWS_REGION_DEV }}" -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Validate - Destroy Existing Bucket
        id: validate-destroy
        run: terraform -chdir=terraform/development/destroy validate -no-color

      - name: Terraform Plan - Destroy Existing Bucket
        id: plan-destroy
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ secrets.AWS_REGION_DEV }}"
          terraform -chdir=terraform/development/destroy plan -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" -no-color
        continue-on-error: true

      - name: Terraform Apply - Destroy Existing Bucket
        id: apply-destroy
        if: steps.plan-destroy.outcome == 'success'
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ secrets.AWS_REGION_DEV }}"
          terraform -chdir=terraform/development/destroy import -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" aws_s3_bucket.bucketdev ${{ secrets.AWS_BUCKET_NAME_DEV }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}
          terraform -chdir=terraform/development/destroy apply -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" -auto-approve
          terraform -chdir=terraform/development/destroy destroy -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" -auto-approve

  dev-destroy-s3-dev-storybook:
    runs-on: ubuntu-latest
    needs: [pre_destroy]
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format - Destroy Existing Bucket
        id: fmt-destroy
        run: terraform -chdir=terraform/development/destroy fmt -check

      - name: Terraform Init - Destroy Existing Bucket
        id: init-destroy
        run: terraform -chdir=terraform/development/destroy init -backend-config="region=${{ secrets.AWS_REGION_DEV }}" -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Validate - Destroy Existing Bucket
        id: validate-destroy
        run: terraform -chdir=terraform/development/destroy validate -no-color

      - name: Terraform Plan - Destroy Existing Bucket
        id: plan-destroy
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ secrets.AWS_REGION_DEV }}"
          terraform -chdir=terraform/development/destroy plan -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV_STORYBOOK }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" -no-color
        continue-on-error: true

      - name: Terraform Apply - Destroy Existing Bucket
        id: apply-destroy
        if: steps.plan-destroy.outcome == 'success'
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ secrets.AWS_REGION_DEV }}"
          terraform -chdir=terraform/development/destroy import -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV_STORYBOOK }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" aws_s3_bucket.bucketdev ${{ secrets.AWS_BUCKET_NAME_DEV_STORYBOOK }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}
          terraform -chdir=terraform/development/destroy apply -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV_STORYBOOK }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" -auto-approve
          terraform -chdir=terraform/development/destroy destroy -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME_DEV_STORYBOOK }}-${{ needs.pre_destroy.outputs.bucket_name_suffix }}" -auto-approve
